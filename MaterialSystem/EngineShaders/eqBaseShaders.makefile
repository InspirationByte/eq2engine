#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../../FileSystem -I../../Engine -I../../public -I../../public/core -I../../public/platform -I../../src_dependency/sdl2/include -I../../public/materialsystem
CFLAGS = -DLINUX -DEQSHADER_LIBRARY
RESINC = 
LIBDIR = -L../../libs
LIB = -lcoreLib -lPrevLib -leqCore
LDFLAGS = 

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2 -DNDEBUG
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS)
OBJDIR_RELEASE = .objs
DEP_RELEASE = 
OUT_RELEASE = ../../../gamebin_linux/libeqBaseShaders.so

OBJ_RELEASE = $(OBJDIR_RELEASE)/DepthWriteLighting.o $(OBJDIR_RELEASE)/Water.o $(OBJDIR_RELEASE)/SkinnedModel.o $(OBJDIR_RELEASE)/ShadersOverride.o $(OBJDIR_RELEASE)/ShadersMain.o $(OBJDIR_RELEASE)/Shaders/SkyBox.o $(OBJDIR_RELEASE)/Shaders/InternalShaders.o $(OBJDIR_RELEASE)/Shaders/DeferredAmbient.o $(OBJDIR_RELEASE)/Shaders/BaseUnlit.o $(OBJDIR_RELEASE)/HDRBlur.o $(OBJDIR_RELEASE)/HDRBloom.o $(OBJDIR_RELEASE)/FlashlightReflector.o $(OBJDIR_RELEASE)/ErrorShader.o $(OBJDIR_RELEASE)/__/__/public/ViewParams.o $(OBJDIR_RELEASE)/DeferredSunLight.o $(OBJDIR_RELEASE)/DeferredSpotLight.o $(OBJDIR_RELEASE)/DeferredPointlight.o $(OBJDIR_RELEASE)/Blur.o $(OBJDIR_RELEASE)/BleachBypass.o $(OBJDIR_RELEASE)/BaseVertexTransition4.o $(OBJDIR_RELEASE)/BaseVertexTransDecal4.o $(OBJDIR_RELEASE)/BaseSingle.o $(OBJDIR_RELEASE)/BaseParticle.o $(OBJDIR_RELEASE)/BaseDecal.o $(OBJDIR_RELEASE)/__/__/public/materialsystem/BaseShader.o

all: release

clean: clean_release

before_release: 
	test -d ../../../gamebin_linux || mkdir -p ../../../gamebin_linux 
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE) 
	test -d $(OBJDIR_RELEASE)/Shaders || mkdir -p $(OBJDIR_RELEASE)/Shaders 
	test -d $(OBJDIR_RELEASE)/__/__/public || mkdir -p $(OBJDIR_RELEASE)/__/__/public 
	test -d $(OBJDIR_RELEASE)/__/__/public/materialsystem || mkdir -p $(OBJDIR_RELEASE)/__/__/public/materialsystem 

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) -shared $(LIBDIR_RELEASE) $(OBJ_RELEASE)  -o $(OUT_RELEASE) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/DepthWriteLighting.o: DepthWriteLighting.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c DepthWriteLighting.cpp -o $(OBJDIR_RELEASE)/DepthWriteLighting.o

$(OBJDIR_RELEASE)/Water.o: Water.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c Water.cpp -o $(OBJDIR_RELEASE)/Water.o

$(OBJDIR_RELEASE)/SkinnedModel.o: SkinnedModel.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c SkinnedModel.cpp -o $(OBJDIR_RELEASE)/SkinnedModel.o

$(OBJDIR_RELEASE)/ShadersOverride.o: ShadersOverride.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c ShadersOverride.cpp -o $(OBJDIR_RELEASE)/ShadersOverride.o

$(OBJDIR_RELEASE)/ShadersMain.o: ShadersMain.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c ShadersMain.cpp -o $(OBJDIR_RELEASE)/ShadersMain.o

$(OBJDIR_RELEASE)/Shaders/SkyBox.o: Shaders/SkyBox.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c Shaders/SkyBox.cpp -o $(OBJDIR_RELEASE)/Shaders/SkyBox.o

$(OBJDIR_RELEASE)/Shaders/InternalShaders.o: Shaders/InternalShaders.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c Shaders/InternalShaders.cpp -o $(OBJDIR_RELEASE)/Shaders/InternalShaders.o

$(OBJDIR_RELEASE)/Shaders/DeferredAmbient.o: Shaders/DeferredAmbient.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c Shaders/DeferredAmbient.cpp -o $(OBJDIR_RELEASE)/Shaders/DeferredAmbient.o

$(OBJDIR_RELEASE)/Shaders/BaseUnlit.o: Shaders/BaseUnlit.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c Shaders/BaseUnlit.cpp -o $(OBJDIR_RELEASE)/Shaders/BaseUnlit.o

$(OBJDIR_RELEASE)/HDRBlur.o: HDRBlur.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c HDRBlur.cpp -o $(OBJDIR_RELEASE)/HDRBlur.o

$(OBJDIR_RELEASE)/HDRBloom.o: HDRBloom.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c HDRBloom.cpp -o $(OBJDIR_RELEASE)/HDRBloom.o

$(OBJDIR_RELEASE)/FlashlightReflector.o: FlashlightReflector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c FlashlightReflector.cpp -o $(OBJDIR_RELEASE)/FlashlightReflector.o

$(OBJDIR_RELEASE)/ErrorShader.o: ErrorShader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c ErrorShader.cpp -o $(OBJDIR_RELEASE)/ErrorShader.o

$(OBJDIR_RELEASE)/__/__/public/ViewParams.o: ../../public/ViewParams.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c ../../public/ViewParams.cpp -o $(OBJDIR_RELEASE)/__/__/public/ViewParams.o

$(OBJDIR_RELEASE)/DeferredSunLight.o: DeferredSunLight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c DeferredSunLight.cpp -o $(OBJDIR_RELEASE)/DeferredSunLight.o

$(OBJDIR_RELEASE)/DeferredSpotLight.o: DeferredSpotLight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c DeferredSpotLight.cpp -o $(OBJDIR_RELEASE)/DeferredSpotLight.o

$(OBJDIR_RELEASE)/DeferredPointlight.o: DeferredPointlight.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c DeferredPointlight.cpp -o $(OBJDIR_RELEASE)/DeferredPointlight.o

$(OBJDIR_RELEASE)/Blur.o: Blur.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c Blur.cpp -o $(OBJDIR_RELEASE)/Blur.o

$(OBJDIR_RELEASE)/BleachBypass.o: BleachBypass.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c BleachBypass.cpp -o $(OBJDIR_RELEASE)/BleachBypass.o

$(OBJDIR_RELEASE)/BaseVertexTransition4.o: BaseVertexTransition4.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c BaseVertexTransition4.cpp -o $(OBJDIR_RELEASE)/BaseVertexTransition4.o

$(OBJDIR_RELEASE)/BaseVertexTransDecal4.o: BaseVertexTransDecal4.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c BaseVertexTransDecal4.cpp -o $(OBJDIR_RELEASE)/BaseVertexTransDecal4.o

$(OBJDIR_RELEASE)/BaseSingle.o: BaseSingle.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c BaseSingle.cpp -o $(OBJDIR_RELEASE)/BaseSingle.o

$(OBJDIR_RELEASE)/BaseParticle.o: BaseParticle.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c BaseParticle.cpp -o $(OBJDIR_RELEASE)/BaseParticle.o

$(OBJDIR_RELEASE)/BaseDecal.o: BaseDecal.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c BaseDecal.cpp -o $(OBJDIR_RELEASE)/BaseDecal.o

$(OBJDIR_RELEASE)/__/__/public/materialsystem/BaseShader.o: ../../public/materialsystem/BaseShader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c ../../public/materialsystem/BaseShader.cpp -o $(OBJDIR_RELEASE)/__/__/public/materialsystem/BaseShader.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf ../../../gamebin_linux
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/Shaders
	rm -rf $(OBJDIR_RELEASE)/__/__/public
	rm -rf $(OBJDIR_RELEASE)/__/__/public/materialsystem

.PHONY: before_release after_release clean_release

