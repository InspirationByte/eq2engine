#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -Ipublic -Ipublic/core -Ipublic/platform -Isrc_dependency/oolua/include -Isrc_dependency/luajit/src
CFLAGS = -std=c++11 -m32 `pkg-config gtk+-2.0 --cflags` -DUSE_GTK -DCROSSLINK_LIB -DLINUX
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2 -DNDEBUG
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS)
OBJDIR_RELEASE = .objs
DEP_RELEASE = 
OUT_RELEASE = libs/libPrevLib.a

OBJ_RELEASE = $(OBJDIR_RELEASE)/public/utils/CRC32.o $(OBJDIR_RELEASE)/public/platform/Platform.o $(OBJDIR_RELEASE)/public/network/net_defs.o $(OBJDIR_RELEASE)/public/network/c_udp.o $(OBJDIR_RELEASE)/public/network/NetMessageBuffer.o $(OBJDIR_RELEASE)/public/network/NetInterfaces.o $(OBJDIR_RELEASE)/public/math/math_util.o $(OBJDIR_RELEASE)/public/utils/strtools.o $(OBJDIR_RELEASE)/public/utils/eqwstring.o $(OBJDIR_RELEASE)/public/utils/eqtimer.o $(OBJDIR_RELEASE)/public/utils/eqthread.o $(OBJDIR_RELEASE)/public/utils/eqstring.o $(OBJDIR_RELEASE)/public/utils/Tokenizer.o $(OBJDIR_RELEASE)/public/utils/KeyValues.o $(OBJDIR_RELEASE)/public/math/FVector.o $(OBJDIR_RELEASE)/public/math/FixedMath.o $(OBJDIR_RELEASE)/public/imaging/ImageLoader.o $(OBJDIR_RELEASE)/public/math/Volume.o $(OBJDIR_RELEASE)/public/math/Vector.o $(OBJDIR_RELEASE)/public/math/Random.o $(OBJDIR_RELEASE)/public/VirtualStream.o $(OBJDIR_RELEASE)/public/math/Quaternion.o $(OBJDIR_RELEASE)/public/math/QuadTree.o $(OBJDIR_RELEASE)/public/math/Matrix.o

all: release

clean: clean_release

before_release: 
	test -d libs || mkdir -p libs 
	test -d $(OBJDIR_RELEASE)/public/utils || mkdir -p $(OBJDIR_RELEASE)/public/utils 
	test -d $(OBJDIR_RELEASE)/public/platform || mkdir -p $(OBJDIR_RELEASE)/public/platform 
	test -d $(OBJDIR_RELEASE)/public/network || mkdir -p $(OBJDIR_RELEASE)/public/network 
	test -d $(OBJDIR_RELEASE)/public/math || mkdir -p $(OBJDIR_RELEASE)/public/math 
	test -d $(OBJDIR_RELEASE)/public/imaging || mkdir -p $(OBJDIR_RELEASE)/public/imaging 
	test -d $(OBJDIR_RELEASE)/public || mkdir -p $(OBJDIR_RELEASE)/public 

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/public/utils/CRC32.o: public/utils/CRC32.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/CRC32.cpp -o $(OBJDIR_RELEASE)/public/utils/CRC32.o

$(OBJDIR_RELEASE)/public/platform/Platform.o: public/platform/Platform.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/platform/Platform.cpp -o $(OBJDIR_RELEASE)/public/platform/Platform.o

$(OBJDIR_RELEASE)/public/network/net_defs.o: public/network/net_defs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/network/net_defs.cpp -o $(OBJDIR_RELEASE)/public/network/net_defs.o

$(OBJDIR_RELEASE)/public/network/c_udp.o: public/network/c_udp.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/network/c_udp.cpp -o $(OBJDIR_RELEASE)/public/network/c_udp.o

$(OBJDIR_RELEASE)/public/network/NetMessageBuffer.o: public/network/NetMessageBuffer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/network/NetMessageBuffer.cpp -o $(OBJDIR_RELEASE)/public/network/NetMessageBuffer.o

$(OBJDIR_RELEASE)/public/network/NetInterfaces.o: public/network/NetInterfaces.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/network/NetInterfaces.cpp -o $(OBJDIR_RELEASE)/public/network/NetInterfaces.o

$(OBJDIR_RELEASE)/public/math/math_util.o: public/math/math_util.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/math_util.cpp -o $(OBJDIR_RELEASE)/public/math/math_util.o

$(OBJDIR_RELEASE)/public/utils/strtools.o: public/utils/strtools.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/strtools.cpp -o $(OBJDIR_RELEASE)/public/utils/strtools.o

$(OBJDIR_RELEASE)/public/utils/eqwstring.o: public/utils/eqwstring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/eqwstring.cpp -o $(OBJDIR_RELEASE)/public/utils/eqwstring.o

$(OBJDIR_RELEASE)/public/utils/eqtimer.o: public/utils/eqtimer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/eqtimer.cpp -o $(OBJDIR_RELEASE)/public/utils/eqtimer.o

$(OBJDIR_RELEASE)/public/utils/eqthread.o: public/utils/eqthread.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/eqthread.cpp -o $(OBJDIR_RELEASE)/public/utils/eqthread.o

$(OBJDIR_RELEASE)/public/utils/eqstring.o: public/utils/eqstring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/eqstring.cpp -o $(OBJDIR_RELEASE)/public/utils/eqstring.o

$(OBJDIR_RELEASE)/public/utils/Tokenizer.o: public/utils/Tokenizer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/Tokenizer.cpp -o $(OBJDIR_RELEASE)/public/utils/Tokenizer.o

$(OBJDIR_RELEASE)/public/utils/KeyValues.o: public/utils/KeyValues.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/utils/KeyValues.cpp -o $(OBJDIR_RELEASE)/public/utils/KeyValues.o

$(OBJDIR_RELEASE)/public/math/FVector.o: public/math/FVector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/FVector.cpp -o $(OBJDIR_RELEASE)/public/math/FVector.o

$(OBJDIR_RELEASE)/public/math/FixedMath.o: public/math/FixedMath.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/FixedMath.cpp -o $(OBJDIR_RELEASE)/public/math/FixedMath.o

$(OBJDIR_RELEASE)/public/imaging/ImageLoader.o: public/imaging/ImageLoader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/imaging/ImageLoader.cpp -o $(OBJDIR_RELEASE)/public/imaging/ImageLoader.o

$(OBJDIR_RELEASE)/public/math/Volume.o: public/math/Volume.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/Volume.cpp -o $(OBJDIR_RELEASE)/public/math/Volume.o

$(OBJDIR_RELEASE)/public/math/Vector.o: public/math/Vector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/Vector.cpp -o $(OBJDIR_RELEASE)/public/math/Vector.o

$(OBJDIR_RELEASE)/public/math/Random.o: public/math/Random.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/Random.cpp -o $(OBJDIR_RELEASE)/public/math/Random.o

$(OBJDIR_RELEASE)/public/VirtualStream.o: public/VirtualStream.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/VirtualStream.cpp -o $(OBJDIR_RELEASE)/public/VirtualStream.o

$(OBJDIR_RELEASE)/public/math/Quaternion.o: public/math/Quaternion.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/Quaternion.cpp -o $(OBJDIR_RELEASE)/public/math/Quaternion.o

$(OBJDIR_RELEASE)/public/math/QuadTree.o: public/math/QuadTree.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/QuadTree.cpp -o $(OBJDIR_RELEASE)/public/math/QuadTree.o

$(OBJDIR_RELEASE)/public/math/Matrix.o: public/math/Matrix.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -std=c++11 -c public/math/Matrix.cpp -o $(OBJDIR_RELEASE)/public/math/Matrix.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf libs
	rm -rf $(OBJDIR_RELEASE)/public/utils
	rm -rf $(OBJDIR_RELEASE)/public/platform
	rm -rf $(OBJDIR_RELEASE)/public/network
	rm -rf $(OBJDIR_RELEASE)/public/math
	rm -rf $(OBJDIR_RELEASE)/public/imaging
	rm -rf $(OBJDIR_RELEASE)/public

.PHONY: before_release after_release clean_release

