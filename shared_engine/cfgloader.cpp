//////////////////////////////////////////////////////////////////////////////////
// Copyright © Inspiration Byte
// 2009-2015
//////////////////////////////////////////////////////////////////////////////////
// Description: Configuration file loader
//////////////////////////////////////////////////////////////////////////////////

#include "core_base_header.h"

#include "utils/strtools.h"
#include "IConCommandFactory.h"
#include "KeyBinding/Keys.h"

void WriteCfgFile(const char *pszFilename, bool bWriteKeyConfiguration /*= true*/)
{
	DKFILE *cfgfile = GetFileSystem()->Open(pszFilename,"w");
	if(!cfgfile)
	{
		return;
	}

	MsgInfo("Writing configuraton file '%s'\n",pszFilename);

	cfgfile->Print("// Generated by Equilibrium\n");

	if(bWriteKeyConfiguration)
		GetKeyBindings()->WriteBindings(cfgfile);

	const DkList<ConCommandBase*> *base = GetCvars()->GetAllCommands();

	for(int i = 0; i < base->numElem();i++)
	{
		if(base->ptr()[i]->IsConVar())
		{
			ConVar *cv = (ConVar*)base->ptr()[i];
			if(cv->GetFlags() & CV_ARCHIVE)
				cfgfile->Print("%s %s\n",cv->GetName(),cv->GetString());
		}
	}

	GetFileSystem()->Close(cfgfile);
}

void CC_SaveCfg(DkList<EqString> *args)
{
	if(args)
	{
		if(args->numElem() > 0)
			WriteCfgFile(args->ptr()[0].GetData(),true);
		else
			WriteCfgFile("config.cfg",true);
	}
	else
		WriteCfgFile("config.cfg",true);
}
static ConCommand cc_cfg_save("writecfg",CC_SaveCfg,"Saves the confirugation file");
